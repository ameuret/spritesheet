#!/usr/bin/env ruby
$: << File.dirname(__FILE__) + '/../lib'

require 'pathname'
require 'optparse'
require 'logger'
require 'zed/spritesheet'

LOG = Logger.new STDOUT
$options = {}
OptionParser.new do |opt|
  opt.banner = <<-'EOS'
  A small tool by
    / \  |  _ \| \ | |  / \ | | | |  _ \ 
   / _ \ | |_) |  \| | / _ \| | | | | | |
  / ___ \|  _ <| |\  |/ ___ \ |_| | |_| |
 /_/   \_\_| \_\_| \_/_/   \_\___/|____/

 Contribute: %s

Usage: %s [$options] PATH_TO_ATLAS

EOS
  opt.banner = opt.banner % [ZED::Spritesheet::PROJECT_URL, $0]

  opt.on('-x', '--external', 'Use external sprite files instead of spritesheet') { $options[:external] = true }
  opt.on('-i', '--ignore-path', 'Ignore atlas path in sprites config') { $options[:ignorePath] = true }
  opt.on('-o', '--output', 'Specify generated file path (specify std for STDOUT)') { |path| $options[:outputPath] = path }
  opt.on('-p', '--force-path PATH', 'Force atlas path in sprites config') { |path| $options[:forcePath] = path }
  opt.on('-s', '--samples', 'Show current samples path') {
    puts "You can find samples there: #{File.expand_path(File.dirname(__FILE__) + '/../samples')}"
    exit!
  }
  opt.on('-w', '--width WIDTH', 'Specify individual sprite width when creating sprite sheet from image file') {
    |width|
    $options[:spriteWidth] = Integer width
  }
  opt.on('-h', '--height HEIGHT', 'Specify individual sprite height when creating sprite sheet from image file') {
    |height|
    $options[:spriteHeight] = Integer height
  }
end.parse!

abort "Usage: #{$0} [$options] PATH_TO_ATLAS (XML)" unless ARGV.length == 1

def createSpritesheet
  imagePath = ARGV[0]
  ZED::Spritesheet.create imagePath, $options[:spriteWidth], $options[:spriteHeight] || $options[:spriteWidth], $options[:external]
end

def importSpritesheet
  atlasPath = ARGV[0]
  ZED::Spritesheet.fromXML atlasPath, $options[:external]
end

ss = case ARGV[0]
     when /\.(png|jpe?g)$/i
       createSpritesheet
     else
       importSpritesheet
     end

ss.export($options[:forcePath], $options[:outputPath])
